Homework_1. 
Linux terminal commands (macOS).

1) Посмотреть где я — pwd (печатает на экран текущий каталог). 

regina@MacBook-Pro-Regina ~ % pwd
/Users/regina

2) Создать папку — mkdir (создание новых каталогов)

regina@MacBook-Pro-Regina ~ % mkdir papka_1
regina@MacBook-Pro-Regina ~ % mkdir papka_2 papka_3 (папки 2 и 3 будут созданы параллельно)

3) Зайти в папку — cd (позволяет перейти из текущего каталога в указанный. Если запустить без параметров - возвращает в домашний каталог. Вызов с 2 точками возвращает на уровень вверх относительно текущего каталога. Вызов с тире cd- возвращает к предыдущему каталогу).

regina@MacBook-Pro-Regina ~ % cd papka_1

4) Создать 3 папки — mkdir 

regina@MacBook-Pro-Regina ~ % mkdir papka_4 papka_5 papka_6

5) Зайти в любую папку — cd (имя папки)

regina@MacBook-Pro-Regina ~ % cd papka_1 
regina@MacBook-Pro-Regina papka_1 %

6) Создать 5 файлов (3 txt, 2 json)

regina@MacBook-Pro-Regina ~ % touch papka_1/list_1.txt
regina@MacBook-Pro-Regina ~ % touch papka_2/list_2.txt
regina@MacBook-Pro-Regina ~ % touch papka_3/list_3.txt

regina@MacBook-Pro-Regina papka_1 % touch file1.json file2.json

7) Создать 3 папки - mkdir -p (папки друг в друге)

regina@MacBook-Pro-Regina papka_1 % mkdir -p pap1/pap2/pap3

8) Вывести список содержимого папки ls -la

regina@MacBook-Pro-Regina papka_1 % ls -la
total 16
drwxr-xr-x  10 regina  staff   320 13 июн 21:36 .
drwxr-x---+ 21 regina  staff   672 13 июн 21:08 ..
-rw-r--r--@  1 regina  staff  6148 13 июн 21:36 .DS_Store
-rw-r--r--   1 regina  staff     0 13 июн 21:32 file1.json
-rw-r--r--   1 regina  staff     0 13 июн 21:32 file2.json
-rw-r--r--   1 regina  staff     0 13 июн 21:28 list_1.json
-rw-r--r--   1 regina  staff     0 13 июн 01:44 list_1.txt
-rw-r--r--   1 regina  staff     0 13 июн 21:23 list_2.json
drwxr-xr-x   4 regina  staff   128 13 июн 21:36 pap1
-rw-r--r--   1 regina  staff     0 13 июн 21:28 papka_1

9) Открыть любой txt файл cat > (показывает содержимое файла)

regina@MacBook-Pro-Regina papka_1 % cat > list_1.txt

10) + написать туда что-нибудь, любой текст

 Hello world
^C
regina@MacBook-Pro-Regina papka_1 % 

11) + сохранить и выйти control + C

^C
regina@MacBook-Pro-Regina papka_1 % 

12) Выйти из папки на уровень выше — cd..

regina@MacBook-Pro-Regina papka_1 % cd ..
regina@MacBook-Pro-Regina ~ % 

13) Переместить любые 2 файла, которые вы создали, в любую другую папку — mv 

regina@MacBook-Pro-Regina ~ % mv papka_1/list_1.json papka_2/list_1.json

14) Cкопировать любые 2 файла, которые вы создали, в любую другую папку — cp 

regina@MacBook-Pro-Regina ~ % cp papka_1/file1.json papka_2/file1.json

regina@MacBook-Pro-Regina ~ % cp papka_1/file2.json papka_3/file2.json

15) Найти файл по имени — find

regina@MacBook-Pro-Regina papka_1 % find . -name "file1.json"
./file1.json

16) Просмотреть содержимое в реальном времени (команда grep) изучите как она работает.
Grep дает очень много возможностей для фильтрации текста. Вы можете выбирать нужные строки из текстовых файлов, отфильтровать вывод команд, и даже искать файлы в файловой системе, которые содержат определённые строки.
Синтаксис команды:
$ grep [опции] шаблон [/путь/к/файлу/или/папке...]
Или:
$ команда | grep [опции] шаблон
Здесь:
	•	Опции - это дополнительные параметры, с помощью которых указываются различные настройки поиска и вывода, например количество строк или режим инверсии.
	•	Шаблон - это любая строка или регулярное выражение, по которому будет выполняться поиск.
	•	Имя файла или папки - это то место, где будет выполняться поиск.

regina@MacBook-Pro-Regina papka_1 % grep Hello list_1.txt
Hello world

$ tail опции файл
По умолчанию утилита выводит десять последних строк из файла, но ее поведение можно настроить с помощью опций:
	•	-c - выводить указанное количество байт с конца файла;
	•	-f - обновлять информацию по мере появления новых строк в файле;
	•	-n - выводить указанное количество строк из конца файла;
	•	--pid - используется с опцией -f, позволяет завершить работу утилиты, когда завершится указанный процесс;
	•	-q - не выводить имена файлов;
	•	--retry - повторять попытки открыть файл, если он недоступен;
	•	-v - выводить подробную информацию о файле. 

regina@MacBook-Pro-Regina papka_1 % tail -f list_1.txt |grep Hello
Hello world

17) вывести несколько первых строк из текстового файла
Команда head выводит начальные строки (по умолчанию — 10)  из одного или нескольких документов.
$ head опции файл

regina@MacBook-Pro-Regina papka_1 % head list_1.txt
Hello world
My name is Regina
I am from Russia
14.06.2023%

-n (--lines) — показывает заданное количество строк вместо 10, которые выводятся по умолчанию
Head -n* файл (filename.txt) * - число строк.

regina@MacBook-Pro-Regina papka_1 % head -3 list_1.txt
Hello world
My name is Regina
I am from Russia

18) вывести несколько последних строк из текстового файла

$ tail опции файл
По умолчанию утилита выводит десять последних строк из файла, но ее поведение можно настроить с помощью опций:
	•	-n - выводить указанное количество строк из конца файла; 
tail -n* файл * - число строк.

regina@MacBook-Pro-Regina papka_1 % tail list_1.txt
Hello world
My name is Regina
I am from Russia
14.06.2023% 

regina@MacBook-Pro-Regina papka_1 % tail -2 list_1.txt
I am from Russia
14.06.2023%    

19) просмотреть содержимое длинного файла (команда less) изучите как она работает.
команда опции файл less list_2.txt
Наиболее популярные опции:
	•	-a, --search-skip-screen — не осуществлять поиск в тексте, который в данный момент отображен на экране;
	•	-c, --clear-screen — листать текст, полностью стирая содержимое экрана (построчная прокрутка работать не будет);
	•	-E, --QUIT-AT-EOF — выйти, когда утилита достигнет конца файла;
	•	-e, --quit-at-eof — выйти, когда утилита второй раз достигнет конца файла;
	•	-F, --quit-if-one-screen — выйти, если содержимое файла помещается на одном экране;
	•	-f, --force — открыть специальный файл;
	•	-i, --ignore-case — игнорировать регистр;
	•	-I, --IGNORE-CASE — игнорировать регистр, даже если паттерн для поиска содержит заглавные буквы;
	•	-n, --line-numbers — не выводить номера строк;
	•	-N, --LINE-NUMBERS — вывести номера строк;
	•	-s, --squeeze-blank-lines — заменить множество идущих подряд пустых строк одной пустой строкой.

Во время просмотра текста утилитой можно управлять при помощи внутренних команд, набирая их на клавиатуре компьютера. Наиболее часто используемые из них:
	•	h, H — справка;
	•	Space, Ctrl+V, f, Ctrl+F — прокрутить текст на один экран вперёд;
	•	Enter, Return, Ctrl+N, e, Ctrl+E, j, Ctrl+J — прокрутить текст на n строк вперед, по умолчанию n=1;
	•	y, Ctrl+Y, Ctrl+P, k, Ctrl+K — прокрутить текст на n строк назад, по умолчанию n=1;
	•	Ctrl+→ — прокрутить текст по горизонтали в конец строки;
	•	Ctrl+← — прокрутить текст по горизонтали в начало строки;
	•	:d — удалить текущий файл из списка файлов;
	•	Ctrl+G, :f — вывести основную информацию о файле;
	•	q, Q, :q, :Q, ZZ — выход.

regina@MacBook-Pro-Regina papka_2 % less list_2.txt 

20) вывести дату и время —- Date
regina@MacBook-Pro-Regina papka_2 % date
среда, 14 июня 2023 г. 22:16:37 (+05)

Задание *
1) Отправить http запрос на сервер.
http://162.55.220.72:5006/terminal-hw-request

regina@MacBook-Pro-Regina ~ % curl http://162.55.220.72:5006/terminal-hw-request 
{
  "Intro": "Hello!! This is your the first response from server", 
  "Tasks": {
    "Task_1": "Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_your_String)&age=(set_your_number)", 
    "result": [
      "Your_String", 
      "Your_number"
    ]
  }
}

regina@MacBook-Pro-Regina ~ % curl "http://162.55.220.72:5005/get_method?name=Regina&age=31" 

Ответ             
[
  "Regina", 
  "31"
]

2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

	1.	Создать файл с расширением myscript.sh  —> touch myscript.sh 
	2.	Открыть его для редактирования —> nano myscript.sh 
	3.	Записать туда команды 3 4 5 6 7 8 13
cd papka_1
mkdir script1 script2 script3
cd script1
touch file1.txt file2.txt file3.txt file1.json file2.json
mkdir new1 new2 new3
ls -la
mv file1.txt file2.txt new1
4. Cохранить файл ctrl + O
5. Выйти из nano ctrl + X
6. Запустить скрипт —> chmod +x myscript.sh (разрешение на запуск) —> sh myscript.sh

regina@MacBook-Pro-Regina ~ % touch myscript.sh
regina@MacBook-Pro-Regina ~ % nano myscript.sh
regina@MacBook-Pro-Regina ~ % chmod +x myscript.sh
regina@MacBook-Pro-Regina ~ % sh myscript.sh
total 0
drwxr-xr-x  10 regina  staff  320 15 июн 15:49 .
drwxr-xr-x  12 regina  staff  384 15 июн 15:49 ..
-rw-r--r--   1 regina  staff    0 15 июн 15:49 file1.json
-rw-r--r--   1 regina  staff    0 15 июн 15:49 file1.txt
-rw-r--r--   1 regina  staff    0 15 июн 15:49 file2.json
-rw-r--r--   1 regina  staff    0 15 июн 15:49 file2.txt
-rw-r--r--   1 regina  staff    0 15 июн 15:49 file3.txt
drwxr-xr-x   2 regina  staff   64 15 июн 15:49 new1
drwxr-xr-x   2 regina  staff   64 15 июн 15:49 new2
drwxr-xr-x   2 regina  staff   64 15 июн 15:49 new3